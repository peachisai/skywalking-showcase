# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.features.kafkaMonitor.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
  selector:
    app: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-exporter
spec:
  ports:
    - protocol: TCP
      port: 7071
      targetPort: 7071
  selector:
    app: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: zookeeper
          image: zookeeper:3.4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
        - name: kafka-broker
          image: bitnami/kafka:2.4.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
            - containerPort: 7071
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
#            - name: KAFKA_OPTS
#              value: "-javaagent:/etc/jmx_prometheus_javaagent-0.18.0.jar=7071:/etc/kafka-2_0_0.yml"
        - name: kafka-consumer
          image: bitnami/kafka:2.4.1
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - -c
            - >
              kafka-producer-perf-test.sh --topic perftest --num-records 100000 --record-size 100 --throughput 500 --producer-props bootstrap.servers=kafka:9092

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kafka-producer
spec:
  schedule: "*/30 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: kafka-producer
              image: bitnami/kafka:2.4.1
              imagePullPolicy: IfNotPresent
              command:
                - bash
                - -c
                - >
                  kafka-producer-perf-test.sh --topic perftest --num-records 100000 --record-size 100 --throughput 500 --producer-props bootstrap.servers=kafka:9092

{{- end }}